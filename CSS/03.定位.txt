定位 - https://blog.csdn.net/m0_63398413/article/details/131818694

# 相对定位

给元素设置position:relative即可实现相对定位。
可以使用left、right、top、bottom四个属性调整位置。
相对定位的参考点是相对自己原来的位置。

相对定位的特点 ：
不会脱离文档流，元素位置的变化，只是视觉效果上的变化，不会对其他元素产生任何影响。
定位可以超出父元素，设置值也可以设置为负数。
定位元素的显示层级比普通元素高，无论什么定位，显示层级都是一样的。
定位元素会覆盖在普通元素之上。
都发生定位的两个元素，后写的元素会盖在先写的元素之上。
left不能和right一起设置，否则只有左生效，top和bottom也不能一起设置。
相对定位的元素，也能继续浮动，但不推荐这样做。
相对定位的元素，也能通过margin调整位置，但不推荐这样做。

注意：绝大多数情况下，相对定位会与绝对定位配合使用。

# 绝对定位
给元素设置position:absolute即可实现绝对定位。

可以使用left、right、top、bottom四个属性调整位置。

脱离文档流，元素位置的变化，会对后面的兄弟元素、父元素有影响。

绝对定位也可以超出父元素，也可以设置负值。

left不能和right一起设置，否则只有左生效，top和bottom也不能一起设置。

绝对定位、浮动不能同时设置，如果同时设置，浮动失效，以定位为主。

绝对定位的元素，也能通过margin调整位置（ps:设置了top和left才能用margin-top和margin-left），但不推荐这样做（不同浏览器可能效果不一样，不稳定）。

无论什么元素（行内、行内块、块级）设置为绝对定位之后，都变成了定位元素（默认宽高被内容所撑开且能自由设置宽高）

绝对定位的参考点是参考它的包含块（对于没有脱离文档流的元素，包含块就是父元素；对于脱离文档流的元素，包含块是第一个拥有定位属性的祖先元素，如果所有祖先元素都没定位，那包含块就是整个页面html）
或这样理解：绝对定位元素的参考元素是第一个非static定位祖先节点，若祖先元素不存在，则相对于初始包含块，一般为html根节点

absolute定位下，当不设置盒偏移量时，left/top默认值是auto，元素的默认位置是假定其为static定位时的位置。

# 固定定位
给元素设置position:fixed即可实现固定定位。

可以使用left、right、top、bottom四个属性调整位置。

固定定位的参考点是它的视口。

脱离文档流，会对后面的兄弟元素、父元素有影响。
定位可以超出父元素，设置值也可以设置为负数。
left不能和right一起设置，否则只有左生效，top和bottom也不能一起设置。
固定定位和浮动不能同时设置，如果同时设置，浮动失效，以固定定位为主。
固定定位的元素，也能通过margin调整位置，但不推荐这样做。
无论什么元素（行内、行内块、块级）设置为固定定位之后，都变成了定位元素。

# 粘性定位

给元素设置position:sticky即可实现粘性定位。
可以使用left、right、top、bottom四个属性调整位置。
粘性定位的参考点是离它最近的一个拥有“滚动机制”的祖先元素，即便这个祖先不是最近的真实可滚动祖先。
🔥粘性定位的特点 🔥：
不会脱离文档流，它是一种专门用于窗口滚动时的新的定位方式。
粘性定位的元素，也能继续浮动，但不推荐这样做。
粘性定位的元素，也能通过margin调整位置，但不推荐这样做。

粘性定位和相对定位的特点基本一致，不同的是：粘性定位可以在元素到达某个位置时将其固定。

# 绝对定位和固定定位的特殊应用
  让定位元素充满包含块
  让定位元素在包含块中水平垂直居中
  
# 总结

定位可以越过padding
定位的层级比普通元素高，无论什么定位显示层级都一样，如果位置发生重叠，默认后面的元素显示在前面的元素之上
可以通过css属性z-index调整元素的显示层级
z-index的属性值默认时数字，没有单位，值越大显示层级越高
只有定位的元素设置z-index才有效
如果z-index值大的元素，依然没有覆盖掉z-index值小的元素，那么请检查其包含块的层级

