#一、入门

# 1.1、简介
#!/bin/bash
sh script.sh
chmod a+x script.sh # 设置文件针对所有用户可执行
./script.sh
# 每个命令或命令序列通过使用分号或换行符来分隔
cmd1; cmd2
cmd1
cmd2

# 1.2、打印
#文件名: printf.sh
#例如-5表示左对齐占用5个字符，不带-默认右对齐
printf "%-5s %-10s %-4s\n" No Name Mark
printf "%-5s %-10s %-4.2f\n" 1 Sarath 80.3456
printf "%-5s %-10s %-4.2f\n" 2 James 90.9989
printf "%-5s %-10s %-4.2f\n" 3 Jeff 77.564

# 打印带有颜色的文本（\e[*m 表示颜色命令，\e[1;31m 表示加粗红色）
echo -e "\e[1;31m This is red text \e[0m"

# 打印从0到50的颜色（例如：重置=0，黑色=30，红色=31，绿色=32，黄色=33，蓝色=34，洋红=35，青色=36，白色=37）
for i in {0..50};
do
  echo -e '\\e['$i"m: \e["$i"m I love you\e[0m"
done

# 1.3.变量和环境变量
# 如果变量值不包含任何空白符例如空格，那它不需要使用双引号进行引用，反之必须使用单引号或双引号

var=123456
echo ${#var} # 获得字符串长度

pgrep java # 查看java程序相关的所有进程号
pid=7794
cat /proc/$pid/environ|tr '\0' '\n' # 查看进程的环境变量

# 常见的环境变量 $PATH $HOME $PWD $USER $UID $SHELL $0 使用示例, root用户的UID是0
# HOME - 用户主目录
# SHELL - 用户使用的Shell解释器名称
# PATH - 定义命令行解释器搜索用户执行命令的路径
# EDITOR - 用户默认的文本解释器
# RANDOM - 生成一个随机数
# LANG - 系统语言、语系名称
# HISTSIZE - 输出的历史命令记录条数
# HISTFILESIZE - 保存的历史命令记录条数
# PS1 - Bash解释器的提示符
# MAIL - 邮件保存路径


if [ $UID -ne 0 ]; then # 检测当前执行shell的用户是否root用户
echo Non root user. Please run as root.
else
echo "Root user"
fi

cat ~/.bashrc | grep PS1 # 查看命令提示符设置

# 1.4.数学运算
# 相关命令符 let (()) [] expr bc
# bc是一个用于数学运算的高级工具，这个精密计算器包含了大量的选项，其他参数可以置于要执行的具体操作之前，同时以分号作为定界符，通过stdin传递给bc
no1=4
no2=5
let result=no1+no2
echo $result
let no1++
let no1--
let no+=6
let no-=6
result=$[ $no1 + $no2]
result=$[ $no1 + 5]
result=$(( $no1 + 50 ))
result=`expr 3 + 4`
result=$(expr $no1 + 5)

echo "4 * 0.56" | bc
no=54
result=`echo "$no * 1.5" | bc`
echo $result

echo "scale=2;3/8" | bc # 保留两位小数
no=100
echo "obase=2;$no" | bc # 进制转换示例
no=1100100
echo "obase=10;ibase=2;$no" | bc # 进制转换示例

echo "sqrt(100)" | bc # Square root
echo "10^10" | bc # Square

# 1.5.文件描述符 与 重定向


