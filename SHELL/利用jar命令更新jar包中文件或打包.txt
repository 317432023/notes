一、利用jar命令更新jar包中文件或打包
方式一：
# 查找
jar tvf erp-bulk-1.0.1.jar | grep 'CustPurchTool.class'

# 提取
jar xvf erp-bulk-1.0.1.jar  com/huaxia/erp/bulk/utils/CustPurchTool.class

# 手工替换本地文件

# 替换（0表示不压缩，用于springboot的jar包）
jar uvf0 erp-bulk-1.0.1.jar com/huaxia/erp/bulk/utils/CustPurchTool.class

方式二：采用打包方式替换
将jar包通过 7z 或者 The Unarchiver 等应用解压缩成目录
在解压后的目录中找到需要替换的文件，执行替换操作
cd进目录，执行打包命令重新进行打包操作
# 注意此处的 '0' 参数，springboot应用打包未使用压缩，所以此处必须设置
jar cvfm0 test.jar META-INF/MANIFEST.MF .

二、jar命令详解
用法: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...
选项:
-----------------------------------------------------------------------------------
其中 {ctxui} 是 jar 命令的子命令，每次 jar 命令只能包含 ctxu 中的一个
-----------------------------------------------------------------------------------
    -c  创建新的 JAR 文件包
    -t  列出 JAR 文件包的内容列表(配合grep命令筛选)
    -x  从 JAR 文件中提取指定的 (或所有) 文件
    -u  更新已存在的 JAR 文件包 (添加文件到 JAR 文件包中)
    -i  为指定的 jar 文件生成索引信息
-----------------------------------------------------------------------------------
[vfmn0PMe] 中的选项可以任选，也可以不选，它们是 jar 命令的选项参数
-----------------------------------------------------------------------------------
    -v  在标准输出中生成详细输出
    -f  指定 JAR 文件名，通常这个参数是必须的
    -m  指定需要包含的 MANIFEST 清单文件
    -n  创建新档案后执行 Pack200 规范化
    -e  为捆绑到可执行 jar 文件的独立应用程序
        指定应用程序入口点
    -0  仅存储; 不使用任何 ZIP 压缩
    -P  保留文件名中的前导 '/' (绝对路径) 和 ".." (父目录) 组件
    -M  不产生所有项的清单（MANIFEST〕文件，此参数会忽略 -m 参数
-----------------------------------------------------------------------------------
[jar-file] 即需要生成、查看、更新或者解开的 JAR 文件包，它是 -f 参数的附属参数
-----------------------------------------------------------------------------------
[manifest-file] 即 MANIFEST 清单文件，它是 -m 参数的附属参数
-----------------------------------------------------------------------------------
[entry-point] mian函数入口，它是 -e 参数的附属参数
-----------------------------------------------------------------------------------
[-C dir] 表示转到指定目录下去执行这个 jar 命令的操作。它相当于先使用 cd 命令跳转至该目录下，
再执行不带 -C 参数的 jar 命令，它只能在创建和更新 JAR 文件包的时候可用。
-----------------------------------------------------------------------------------
files ... 指定一个文件/目录列表（使用空格进行分隔），这些文件/目录就是要
添加到 JAR 文件包中的文件/目录。
如果指定了目录，那么 jar 命令打包的时候会自动把该目录中的所有文件和子目录打入包中。
-----------------------------------------------------------------------------------
注意：
清单文件名, 档案文件名和入口点名称的指定顺序与 'm', 'f' 和 'e' 标记的指定顺序相同。

示例 1: 将两个类文件归档到一个名为 classes.jar 的档案中:
       jar cvf classes.jar Foo.class Bar.class
示例 2: 使用现有的清单文件 'mymanifest' 并
       将 foo/ 目录中的所有文件归档到 'classes.jar' 中:
       jar cvfm classes.jar mymanifest -C foo/ .